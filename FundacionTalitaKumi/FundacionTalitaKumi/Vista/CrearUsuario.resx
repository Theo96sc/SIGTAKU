<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_guardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>